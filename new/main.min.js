const backgroundImages = ["bg_1.webp", "bg_2.webp", "bg_3.webp", "bg_4.webp"],
  selectedBg =
    backgroundImages[Math.floor(Math.random() * backgroundImages.length)],
  introBg = document.querySelector(".s-intro__bg");
introBg &&
  (introBg.style.backgroundImage = `url('https://niarosss.github.io/knowledge-base/img/${selectedBg}')`);
const themeToggleSwitch = document.querySelector("#change-th");
function detectColorScheme() {
  "dark" ===
    (localStorage.getItem("theme") ||
      (window.matchMedia &&
      window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light")) &&
    (document.body.classList.add("dark"), (themeToggleSwitch.checked = !0));
}
function toggleTheme(e) {
  const t = e.target.checked;
  localStorage.setItem("theme", t ? "dark" : "light"),
    document.body.classList.toggle("dark", t);
}
function detectIntroHidden() {
  "yes" === localStorage.getItem("hide-intro") &&
    (document.body.classList.add("hide-intro"), (hideIntroToggle.checked = !0));
}
function toggleIntroVisibility(e) {
  const t = e.target.checked;
  localStorage.setItem("hide-intro", t ? "yes" : "no"),
    document.body.classList.toggle("hide-intro", t);
}
detectColorScheme(),
  themeToggleSwitch?.addEventListener("change", toggleTheme),
  detectIntroHidden();
const hideIntroToggle = document.querySelector("#hide-tg");
hideIntroToggle?.addEventListener("change", toggleIntroVisibility);
const quotes = [
    {
      text: "«Практика без теорії цінніша, ніж теорія без практики»",
      author: "- Марк Фабій Квінтиліан",
    },
    { text: "«Ціле опановують по частинах»", author: "- Сене́ка Анне́й Лу́цій" },
    {
      text: "«Робота роботою, але в цьому житті треба ще щось і корисне робити»",
      author: "- Хенрік Ягодзіньскій",
    },
    {
      text: "«Завжди не вистачає часу, щоб виконати роботу як треба, але на те, щоб її переробити, час знаходиться»",
      author: "- закон Мескімена",
    },
    {
      text: "«Ніколи не відкладай на завтра те, що можеш зробити післязавтра»",
      author: "- Альфонс Аллі",
    },
    {
      text: "«Хто вміє, той робить, а хто не вміє, той вчить»",
      author: "- Бернард Шоу",
    },
    {
      text: "«Думати – ось найважча робота, і тому мало хто за неї береться»",
      author: "- Генрі Форд",
    },
    {
      text: "«Стомлює не стільки сама праця, скільки думки про неї»",
      author: "- Марк Фабій Квінтиліан",
    },
    {
      text: "«Зробіть комусь послугу — і це стане вашою роботою»",
      author: "- Закон Мерфі",
    },
    {
      text: "«80% успіху — це з’явитися в потрібному місці в потрібний час»",
      author: "- Вуді Аллен",
    },
    {
      text: "«Краще тримати рот на замку і здатися дурнем, ніж заговорити і розвіяти всі сумніви»",
      author: "- Марк Твен",
    },
    {
      text: "«Краще тримати рот на замку і здатися дурнем, ніж заговорити і розвіяти всі сумніви»",
      author: "- Марк Твен",
    },
    {
      text: "«У всьому є баланс. Кількість енергії, яку ви отримуєте, дорівнює завданням, які потрібно виконати»",
      author: "- Борис Пастернак",
    },
    {
      text: "«Не в грошах щастя, а в їхній кількості»",
      author: "- Михайло Генін",
    },
    {
      text: "«Людині не потрібно нічого понад те, що їй дала природа. Окрім грошей»",
      author: "- Юзеф Бестер",
    },
    {
      text: "«Є тільки один спосіб уникнути критики: нічого не робіть, нічого не говоріть і будьте ніким»",
      author: "- Арісто́тель",
    },
  ],
  quote = quotes[Math.floor(Math.random() * quotes.length)],
  quoteText = document.getElementById("bes"),
  quoteAuthor = document.getElementById("tes");
quoteText &&
  quoteAuthor &&
  ((quoteText.innerText = quote.text),
  (quoteAuthor.innerText = `– ${quote.author}`));
const faqItems = document.querySelectorAll(".js-faq-question");
function AutoCalcYear(e) {
  var t = document.getElementById("yearp").value,
    o = Math.round((parseFloat(t) / 365) * 100) / 100;
  (document.getElementById("dayp").value = o),
    isNaN(o) && (document.getElementById("dayp").value = "");
}
function AutoCalcDay(e) {
  var t = document.getElementById("dayp").value,
    o = Math.round(365 * parseFloat(t) * 100) / 100;
  (document.getElementById("yearp").value = o),
    isNaN(o) && (document.getElementById("yearp").value = "");
}
faqItems.forEach((e) => {
  e.addEventListener("click", () => {
    e.classList.toggle("active");
    e.nextElementSibling?.classList.toggle("open");
  });
});
const form = document.getElementById("tg"),
  alertBox = document.getElementById("alert");
form &&
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const t = `\n<b>Повідомлення з шаблонів</b>\nІм'я: ${form.name.value}\nТип: ${form.type.value}\nПовідомлення:\n${form.text.value}\n    `;
    try {
      await axios.post(
        "https://api.telegram.org/bot6518281367:AAGPoCN6sow3Vfjyx7B9X02xPJMOhMPQKsA/sendMessage",
        { chat_id: "-1001865505546", parse_mode: "html", text: t }
      ),
        form.reset(),
        (alertBox.className = "alert-box alert-box--success"),
        (alertBox.innerHTML =
          "<p>Повідомлення успішно надіслано. Дякую :3</p><span class='alert-box__close'></span>");
    } catch (e) {
      (alertBox.className = "alert-box alert-box--error"),
        (alertBox.innerHTML = `<p>Помилка:<br>${e}</p><span class='alert-box__close'></span>`);
    }
    alertBox.style.display = "block";
  });
const highlightToggle = document.querySelector("#high-tg"),
  copyMenu = document.querySelector(".s-copy"),
  copyWithoutSignBtn = document.querySelector(".s-copy_without-sign"),
  copyWithSignBtn = document.querySelector(".s-copy_with-sign"),
  copySuccessMessage = document.querySelector(".s-copy_success"),
  greetingToggleItem = document.querySelector(".s-copy_hand"),
  greetingToggleCheckbox = document.querySelector("#hand");
function initHighlightToggle() {
  const e = "yes" === localStorage.getItem("highlight");
  (highlightToggle.checked = e),
    highlightToggle.addEventListener("change", (e) => {
      localStorage.setItem("highlight", e.target.checked ? "yes" : "no");
    });
}
function setupSelectableElements() {
  document.querySelectorAll("[data-selectable]").forEach((e) => {
    e.addEventListener("click", () => {
      if (!highlightToggle.checked) return;
      const t = window.getSelection(),
        o = document.createRange();
      o.selectNode(e), t.removeAllRanges(), t.addRange(o);
    });
  });
}
function getSelectedTextData() {
  const e = window.getSelection();
  if (!e.rangeCount) return { text: "", rect: null };
  const t = e.getRangeAt(0),
    o = e.toString().trim();
  return o
    ? { text: o, rect: t.getBoundingClientRect() }
    : { text: "", rect: null };
}
function toggleCopyMenu() {
  const { rect: e } = getSelectedTextData();
  e && e.width > 0 && e.height > 0 ? openCopyMenu() : closeCopyMenu();
}
function openCopyMenu() {
  const { rect: e } = getSelectedTextData();
  e &&
    ((copyMenu.style.left = `${e.left + window.pageXOffset}px`),
    (copyMenu.style.top = e.top + window.pageYOffset - 50 + "px"),
    copyMenu.classList.remove("s-copy--visible"),
    copyMenu.offsetWidth,
    copyMenu.classList.add("s-copy--visible"),
    resetCopyMenu());
}
function closeCopyMenu() {
  copyMenu.classList.contains("s-copy--visible") &&
    (copyMenu.classList.remove("s-copy--visible"),
    copyMenu.classList.add("s-copy--hiding"),
    copyMenu.addEventListener(
      "animationend",
      () => {
        copyMenu.classList.remove("s-copy--hiding");
      },
      { once: !0 }
    ));
}
function resetCopyMenu() {
  (copySuccessMessage.style.display = "none"),
    (copyWithoutSignBtn.style.display = "flex"),
    (copyWithSignBtn.style.display = "flex"),
    (greetingToggleItem.style.display = "flex");
}
function showCopySuccessOnly() {
  (copySuccessMessage.style.display = "flex"),
    (copyWithoutSignBtn.style.display = "none"),
    (copyWithSignBtn.style.display = "none"),
    (greetingToggleItem.style.display = "none");
}
function handleScrollHideSelection() {
  const e = window.getSelection();
  if (!e.rangeCount) return;
  const t = e.getRangeAt(0).getBoundingClientRect();
  (t.bottom < 0 ||
    t.top > window.innerHeight ||
    t.right < 0 ||
    t.left > window.innerWidth) &&
    window.getSelection().removeAllRanges();
}
let isClickListenerActive = !1;
function handleSelectionChange() {
  const { text: e } = getSelectedTextData();
  e
    ? (toggleCopyMenu(),
      isClickListenerActive ||
        (document.body.addEventListener("click", onClickOutside),
        (isClickListenerActive = !0)))
    : (window.getSelection().removeAllRanges(),
      isClickListenerActive &&
        (document.body.removeEventListener("click", onClickOutside),
        (isClickListenerActive = !1)));
}
function onClickOutside(e) {
  e.target.closest(".s-copy") ||
    e.target.closest("[data-selectable]") ||
    (window.getSelection().removeAllRanges(),
    document.body.removeEventListener("click", onClickOutside),
    (isClickListenerActive = !1));
}
async function copyText(e = !1) {
  const { text: t } = getSelectedTextData();
  if (!t) return;
  const o = greetingToggleCheckbox?.checked;
  let n = o ? "Добрий день!\n\n" : "";
  (n += t),
    e &&
      (n +=
        "\n\nЗ повагою,\nСлужба підтримки клієнтів Pango\nтел.: (044)337-03-37\ne-mail: info@pango.com.ua");
  try {
    await navigator.clipboard.writeText(n),
      showCopySuccessOnly(),
      setTimeout(() => {
        window.getSelection().removeAllRanges();
      }, 1e3);
  } catch (e) {}
}
initHighlightToggle(), setupSelectableElements();
let debounceTimeout = null;
function toggleCopyMenuDebounced() {
  debounceTimeout && clearTimeout(debounceTimeout),
    (debounceTimeout = setTimeout(toggleCopyMenu, 150));
}
document.addEventListener("selectionchange", toggleCopyMenuDebounced),
  document.addEventListener("copy", () => copyText(!1)),
  copyWithoutSignBtn?.addEventListener("click", () => copyText(!1)),
  copyWithSignBtn?.addEventListener("click", () => copyText(!0)),
  window.addEventListener("scroll", handleScrollHideSelection),
  (function (e) {
    !(function () {
      const t = anime.timeline({
        easing: "easeInOutCubic",
        duration: 800,
        autoplay: !1,
      });
      t
        .add({
          targets: "#loader",
          opacity: 0,
          duration: 1e3,
          begin: () => window.scrollTo(0, 0),
        })
        .add({
          targets: "#preloader",
          opacity: 0,
          complete: () => {
            const e = document.querySelector("#preloader");
            e && ((e.style.visibility = "hidden"), (e.style.display = "none"));
          },
        })
        .add(
          {
            targets: [".s-header__logo", ".s-header__menu-toggle"],
            opacity: [0, 1],
          },
          "-=200"
        )
        .add(
          {
            targets: [
              ".s-intro__title",
              ".s-intro__pretitle",
              ".s-intro__more",
            ],
            translateY: [100, 0],
            opacity: [0, 1],
            delay: anime.stagger(200),
          },
          "-=400"
        )
        .add(
          {
            targets: [".s-intro__social", ".s-intro__scroll"],
            opacity: [0, 1],
            delay: anime.stagger(200),
          },
          "-=200"
        ),
        document.querySelector("#preloader") &&
          (e.classList.add("ss-preload"),
          window.addEventListener("load", () => {
            e.classList.remove("ss-preload"),
              e.classList.add("ss-loaded"),
              t.play();
          }));
    })(),
      new Rellax(".rellax"),
      (function () {
        const e = document.querySelector(".s-header__menu-toggle");
        e &&
          window.addEventListener("scroll", () => {
            window.scrollY > 500
              ? e.classList.add("opaque")
              : e.classList.remove("opaque");
          });
      })(),
      (function () {
        const e = document.querySelectorAll("[data-animate-block]");
        e.length &&
          window.addEventListener("scroll", function () {
            const t = window.innerHeight;
            e.forEach((e) => {
              const o = e.getBoundingClientRect(),
                n = o.top,
                s = o.bottom,
                c = (Math.min(s, t) - Math.max(n, 0)) / o.height,
                i = e.classList.contains("ss-animated");
              c >= 0.2 &&
                !i &&
                anime({
                  targets: e.querySelectorAll("[data-animate-el]"),
                  opacity: [0, 1],
                  translateY: [100, 0],
                  delay: anime.stagger(200, { start: 200 }),
                  duration: 800,
                  easing: "easeInOutCubic",
                  begin: () => e.classList.add("ss-animated"),
                });
            });
          });
      })(),
      (function () {
        const e = document.body,
          t = document.querySelector(".s-header__menu-toggle"),
          o = document.querySelectorAll(".feedback"),
          n = document.querySelector(".settings"),
          s = document.querySelector(".percent"),
          c = document.querySelector(".s-header__nav"),
          i = document.querySelector(".s-settings"),
          a = document.querySelector(".s-feedback"),
          l = document.querySelector(".s-percentage"),
          r = document.querySelectorAll(".close-mark"),
          d = document.querySelector(".close-perc");
        t &&
          c &&
          n &&
          i &&
          o.length &&
          a &&
          s &&
          l &&
          (t.addEventListener("click", (t) => {
            t.preventDefault(),
              t.stopPropagation(),
              e.classList.add("menu-is-open"),
              e.classList.remove("settings-is-open", "feedback-is-open");
          }),
          n.addEventListener("click", (t) => {
            t.preventDefault(),
              t.stopPropagation(),
              e.classList.add("settings-is-open"),
              e.classList.remove("menu-is-open");
          }),
          o.forEach((t) => {
            t.addEventListener("click", (t) => {
              if (
                (t.preventDefault(),
                t.stopPropagation(),
                !document.querySelector('script[src*="axios"]'))
              ) {
                const t = document.createElement("script");
                (t.src =
                  "https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"),
                  e.appendChild(t);
              }
              e.classList.add("feedback-is-open"),
                e.classList.remove("menu-is-open");
            });
          }),
          s.addEventListener("click", (t) => {
            t.preventDefault(),
              t.stopPropagation(),
              e.classList.add("percentage-is-open");
          }),
          d &&
            d.addEventListener("click", (t) => {
              t.preventDefault(),
                t.stopPropagation(),
                e.classList.remove("percentage-is-open");
            }),
          r.forEach((t) => {
            t.addEventListener("click", (t) => {
              t.preventDefault(),
                t.stopPropagation(),
                e.classList.remove(
                  "menu-is-open",
                  "feedback-is-open",
                  "settings-is-open"
                );
            });
          }),
          e.addEventListener("click", (t) => {
            t.target.closest(
              ".s-header__nav, .s-popup, .s-header__menu-toggle"
            ) ||
              (e.classList.remove("menu-is-open"),
              e.classList.remove("settings-is-open"),
              e.classList.remove("feedback-is-open"));
          }),
          c &&
            c.querySelectorAll("a").forEach((t) => {
              t.addEventListener("click", () => {
                e.classList.remove("menu-is-open");
              });
            }));
      })(),
      document.querySelectorAll(".alert-box").forEach((e) => {
        e.addEventListener("click", (t) => {
          t.target.matches(".alert-box__close") &&
            (t.stopPropagation(),
            e.classList.add("hideit"),
            setTimeout(() => {
              e.style.display = "none";
            }, 500));
        });
      }),
      (function () {
        const e = document.querySelector(".ss-go-top");
        function t() {
          window.scrollY >= 900
            ? e.classList.add("link-is-visible")
            : e.classList.remove("link-is-visible");
        }
        e && (t(), window.addEventListener("scroll", t));
      })();
  })(document.documentElement);
